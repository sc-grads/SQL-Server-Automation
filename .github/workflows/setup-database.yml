name: Setup AutoTest Database

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup-database:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install sqlcmd
        run: choco install sqlserver-cmdlineutils -y
        shell: powershell

      - name: Setup Database and Insert Data
        env:
          SQL_SERVER: rnxal-197-184-78-105.a.free.pinggy.link,40683
          SQL_USER: Auto_user
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
        run: |
          sqlcmd -S $env:SQL_SERVER -U $env:SQL_USER -P $env:SQL_PASSWORD -Q "IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = 'AutoTest') CREATE DATABASE AutoTest;"
          sqlcmd -S $env:SQL_SERVER -U $env:SQL_USER -P $env:SQL_PASSWORD -d AutoTest -Q "IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'user') CREATE TABLE [dbo].[user] (ID INT IDENTITY(1,1) PRIMARY KEY, Name NVARCHAR(100), Surname NVARCHAR(100), Email NVARCHAR(100));"
          sqlcmd -S $env:SQL_SERVER -U $env:SQL_USER -P $env:SQL_PASSWORD -d AutoTest -Q "IF EXISTS (SELECT * FROM sys.procedures WHERE name = 'InsertUser') DROP PROCEDURE InsertUser; CREATE PROCEDURE InsertUser @Name NVARCHAR(100), @Surname NVARCHAR(100), @Email NVARCHAR(100) AS BEGIN INSERT INTO [dbo].[user] (Name, Surname, Email) VALUES (@Name, @Surname, @Email); END;"
          sqlcmd -S $env:SQL_SERVER -U $env:SQL_USER -P $env:SQL_PASSWORD -d AutoTest -Q "EXEC InsertUser 'John', 'Doe', 'john.doe@example.com';"
          sqlcmd -S $env:SQL_SERVER -U $env:SQL_USER -P $env:SQL_PASSWORD -d AutoTest -Q "EXEC InsertUser 'Jane', 'Smith', 'jane.smith@example.com';"
